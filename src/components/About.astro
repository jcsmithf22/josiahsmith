<section class="effect-002 w-full">
  <div class="effect-container p-4 py-12 sm:p-6 lg:grid lg:p-12">
    <div>
      <h2 class="text-2xl">About me</h2>
    </div>

    <div class="mt-12 w-full md:flex md:gap-x-8 lg:gap-x-20">
      <div>
        <div class="aspect-square h-auto w-[16rem] bg-zinc-200 lg:w-[24rem]">
        </div>
      </div>
      <div class="max-w-[52em]">
        <h2
          class="paragraph text-3xl font-light tracking-wide text-black sm:text-4xl xl:text-[52px]/15"
        >
          <!--
          <h2
          --
        >
          <!--   class="paragraph text-3xl/8 font-light tracking-wide text-black sm:text-4xl/9 lg:text-4xl/9 xl:text-5xl/12" -->
          <!-- > -->
          I develop cutting edge technologies in the nonwoven field. Adept at combining
          mechanical design, automation programming and data analysis to drive results.
          Experienced in training machine learning models to optimize performance
          and detect anomalies.
        </h2>
      </div>
    </div>
  </div>
</section>

<style>
  .effect-002 {
    height: 500vh;
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { wrapWordsInSpan } from "../js/lib/utils";

  gsap.registerPlugin(ScrollTrigger);

  function init() {
    const pin = document.querySelector<HTMLDivElement>(".effect-002")!;
    const container = pin.querySelector<HTMLDivElement>(".effect-container")!;
    const paragraph =
      container.querySelector<HTMLParagraphElement>(".paragraph")!;

    // ScrollTrigger.create({
    //   trigger: pin, // We listen to .pin-height position
    //   start: "top 80px",
    //   end: "bottom bottom",
    //   pin: container, // Progresses with the scroll
    // });

    const words = wrapWordsInSpan(paragraph);

    // We will have an array of lines that contain an array of words
    // const lines = wordsPerLine(words);

    gsap.to(words, {
      x: 0, // Animate the 'x' property to 0
      stagger: 0.02, // Stagger the animation of each element by 0.02 seconds
      ease: "power4.inOut", // Use a power4 easing function for smooth start and end
      scrollTrigger: {
        trigger: pin, // We listen to pinHeight position
        start: "top 80px", // Start the animation when the top of the trigger hits the top of the viewport
        end: "bottom bottom", // End the animation when the bottom of the trigger hits the bottom of the viewport
        scrub: true, // Smoothly scrub the animation based on scroll position
        pin: container, // Let's pin our container while all the words animate
      },
    });

    // lines.forEach((line) => {
    //   gsap.to(line, {
    //     x: 0, // Animate the 'x' property to 0
    //     stagger: 0.2, // Stagger the animation of each element by 0.2
    //     ease: "power1.inOut",
    //     scrollTrigger: {
    //       trigger: pin, // Element that triggers the animation
    //       start: "top 80px", // Start the animation when the top of the trigger hits the top of the viewport
    //       end: "bottom bottom", // End the animation when the bottom of the trigger hits the bottom of the viewport
    //       scrub: true, // Scrub the animation based on scroll position
    //     },
    //   });
    // });
  }

  document.addEventListener("DOMContentLoaded", () => {
    init();
  });
</script>
